{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-frontend-online-store/src/components/PayForms.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport previous from '../images/previous.png';\nconst states = ['Rio de Janeiro', 'Minas Gerais', 'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n\nclass PayForms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullname: '',\n      email: '',\n      cep: '',\n      phone: '',\n      address: ''\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    console.log(target);\n    const value = target.type === 'checkbox' ? target.checked : target.value; // const name = target.name;\n    // this.setState({\n    //   [name]: value\n    // });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  } // validateField(fieldName, value) {\n  //   switch (fieldName) {\n  //     case 'email':\n  //       const isValid = value\n  //         .match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2})$/i);\n  //       return isValid ? '' : ' is invalid';\n  //     default:\n  //       break;\n  //   }\n  //   return '';\n  // }\n\n\n  inputForm(name, type, data, holder) {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: type,\n      name: name,\n      \"data-testid\": data,\n      placeholder: holder,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: previous,\n      alt: \"Imagem de uma seta\",\n      className: \"previous-shop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Informa\\xE7\\xF5es do Comprador\"), this.inputForm('Name', 'text', 'checkout-fullname', 'Nome Completo'), this.inputForm('email', 'email', 'checkout-email', 'Email@.com'), this.inputForm('cep', 'number', 'checkout-cep', 'CEP'), this.inputForm('phone', 'number', 'checkout-phone', 'Telefone'), this.inputForm('address', 'text', 'checkout-address', 'Endereço'), this.inputForm('complement', 'text', 'checkout-complement', 'Complemento'), this.inputForm('number', 'number', 'checkout-number', 'Número'), this.inputForm('city', 'text', 'checkout-city', 'Cidade'), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"countryState\",\n      required: true,\n      onChange: this.handleChange.bind(this),\n      defaultValue: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Selecione\"), states.map((value, key) => /*#__PURE__*/React.createElement(\"option\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, value))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Comprar\",\n      \"data-testid\": \"checkout-products\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default PayForms;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-frontend-online-store/src/components/PayForms.jsx"],"names":["React","Component","Link","previous","states","PayForms","constructor","props","state","fullname","email","cep","phone","address","handleChange","target","console","log","value","type","checked","handleSubmit","event","preventDefault","inputForm","name","data","holder","render","bind","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport previous from '../images/previous.png';\n\nconst states = ['Rio de Janeiro',\n  'Minas Gerais', 'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n\nclass PayForms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullname: '',\n      email: '',\n      cep: '',\n      phone: '',\n      address: '',\n    };\n  }\n\n  handleChange({ target }) {\n    console.log(target);\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    // const name = target.name;\n\n    // this.setState({\n    //   [name]: value\n    // });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  // validateField(fieldName, value) {\n  //   switch (fieldName) {\n  //     case 'email':\n  //       const isValid = value\n  //         .match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2})$/i);\n  //       return isValid ? '' : ' is invalid';\n  //     default:\n  //       break;\n  //   }\n  //   return '';\n  // }\n\n  inputForm(name, type, data, holder) {\n    return (\n      <label htmlFor={ name }>\n        <input\n          type={ type }\n          name={ name }\n          data-testid={ data }\n          placeholder={ holder }\n          required\n        />\n      </label>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Link to=\"/\">\n          <img src={ previous } alt=\"Imagem de uma seta\" className=\"previous-shop\" />\n        </Link>\n        <form>\n          <fieldset>\n            <legend>Informações do Comprador</legend>\n            { this.inputForm('Name', 'text', 'checkout-fullname', 'Nome Completo') }\n            { this.inputForm('email', 'email', 'checkout-email', 'Email@.com') }\n            { this.inputForm('cep', 'number', 'checkout-cep', 'CEP') }\n            { this.inputForm('phone', 'number', 'checkout-phone', 'Telefone') }\n            { this.inputForm('address', 'text', 'checkout-address', 'Endereço') }\n            { this.inputForm('complement', 'text', 'checkout-complement', 'Complemento') }\n            { this.inputForm('number', 'number', 'checkout-number', 'Número') }\n            { this.inputForm('city', 'text', 'checkout-city', 'Cidade') }\n            <select\n              name=\"countryState\"\n              required\n              onChange={ this.handleChange.bind(this) }\n              defaultValue=\"\"\n            >\n              <option value=\"\">Selecione</option>\n              { states.map((value, key) => (\n                <option key={ key }>{ value }</option>\n              )) }\n            </select>\n            <input type=\"button\" value=\"Comprar\" data-testid=\"checkout-products\" />\n          </fieldset>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default PayForms;\n"]},"metadata":{},"sourceType":"module"}